_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[12],{Ff2n:function(e,a,n){"use strict";function t(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(a,"a",(function(){return t}))},HqRm:function(e,a,n){e.exports={container:"blog_container__lN3sd"}},M6OC:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return J})),n.d(a,"default",(function(){return V}));var t=n("rePB"),o=n("Ff2n"),s=n("q1tI"),p=n.n(s);function c(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function m(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){c(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=p.a.createContext({}),N=function(e){var a=p.a.useContext(i),n=a;return e&&(n="function"===typeof e?e(a):m(m({},a),e)),n},u={inlineCode:"code",wrapper:function(e){var a=e.children;return p.a.createElement(p.a.Fragment,{},a)}},d=p.a.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),r=N(n),i=t,d=r["".concat(s,".").concat(i)]||r[i]||u[i]||o;return n?p.a.createElement(d,m(m({ref:a},c),{},{components:n})):p.a.createElement(d,m({ref:a},c))}));function k(e,a){var n=arguments,t=a&&a.mdxType;if("string"===typeof e||t){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var r in a)hasOwnProperty.call(a,r)&&(c[r]=a[r]);c.originalType=e,c.mdxType="string"===typeof e?e:t,s[1]=c;for(var m=2;m<o;m++)s[m]=n[m];return p.a.createElement.apply(null,s)}return p.a.createElement.apply(null,n)}d.displayName="MDXCreateElement";var h=n("nKUr"),g=n("g4pe"),f=n.n(g);function y(){return(y=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function w(e,a){e.prototype=Object.create(a.prototype),e.prototype.constructor=e,e.__proto__=a}var b={templateTitle:"",noindex:!1,nofollow:!1,defaultOpenGraphImageWidth:0,defaultOpenGraphImageHeight:0,defaultOpenGraphVideoWidth:0,defaultOpenGraphVideoHeight:0},v=function(e){var a,n=[];e.titleTemplate&&(b.templateTitle=e.titleTemplate);var t="";e.title?(t=e.title,b.templateTitle&&(t=b.templateTitle.replace(/%s/g,(function(){return t})))):e.defaultTitle&&(t=e.defaultTitle),t&&n.push(p.a.createElement("title",{key:"title"},t));var o=e.noindex||b.noindex||e.dangerouslySetAllPagesToNoIndex,s=e.nofollow||b.nofollow||e.dangerouslySetAllPagesToNoFollow,c="";if(e.robotsProps){var r=e.robotsProps,m=r.nosnippet,l=r.maxSnippet,i=r.maxImagePreview,N=r.maxVideoPreview,u=r.noarchive,d=r.noimageindex,k=r.notranslate,h=r.unavailableAfter;c=(m?",nosnippet":"")+(l?",max-snippet:"+l:"")+(i?",max-image-preview:"+i:"")+(u?",noarchive":"")+(h?",unavailable_after:"+h:"")+(d?",noimageindex":"")+(N?",max-video-preview:"+N:"")+(k?",notranslate":"")}if(o||s?(e.dangerouslySetAllPagesToNoIndex&&(b.noindex=!0),e.dangerouslySetAllPagesToNoFollow&&(b.nofollow=!0),n.push(p.a.createElement("meta",{key:"robots",name:"robots",content:(o?"noindex":"index")+","+(s?"nofollow":"follow")+c})),n.push(p.a.createElement("meta",{key:"googlebot",name:"googlebot",content:(o?"noindex":"index")+","+(s?"nofollow":"follow")+c}))):(n.push(p.a.createElement("meta",{key:"robots",name:"robots",content:"index,follow"+c})),n.push(p.a.createElement("meta",{key:"googlebot",name:"googlebot",content:"index,follow"+c}))),e.description&&n.push(p.a.createElement("meta",{key:"description",name:"description",content:e.description})),e.mobileAlternate&&n.push(p.a.createElement("link",{rel:"alternate",key:"mobileAlternate",media:e.mobileAlternate.media,href:e.mobileAlternate.href})),e.languageAlternates&&e.languageAlternates.length>0&&e.languageAlternates.forEach((function(e){n.push(p.a.createElement("link",{rel:"alternate",key:"languageAlternate-"+e.hrefLang,hrefLang:e.hrefLang,href:e.href}))})),e.twitter&&(e.twitter.cardType&&n.push(p.a.createElement("meta",{key:"twitter:card",name:"twitter:card",content:e.twitter.cardType})),e.twitter.site&&n.push(p.a.createElement("meta",{key:"twitter:site",name:"twitter:site",content:e.twitter.site})),e.twitter.handle&&n.push(p.a.createElement("meta",{key:"twitter:creator",name:"twitter:creator",content:e.twitter.handle}))),e.facebook&&e.facebook.appId&&n.push(p.a.createElement("meta",{key:"fb:app_id",property:"fb:app_id",content:e.facebook.appId})),e.openGraph){if((e.openGraph.url||e.canonical)&&n.push(p.a.createElement("meta",{key:"og:url",property:"og:url",content:e.openGraph.url||e.canonical})),e.openGraph.type){var g=e.openGraph.type.toLowerCase();n.push(p.a.createElement("meta",{key:"og:type",property:"og:type",content:g})),"profile"===g&&e.openGraph.profile?(e.openGraph.profile.firstName&&n.push(p.a.createElement("meta",{key:"profile:first_name",property:"profile:first_name",content:e.openGraph.profile.firstName})),e.openGraph.profile.lastName&&n.push(p.a.createElement("meta",{key:"profile:last_name",property:"profile:last_name",content:e.openGraph.profile.lastName})),e.openGraph.profile.username&&n.push(p.a.createElement("meta",{key:"profile:username",property:"profile:username",content:e.openGraph.profile.username})),e.openGraph.profile.gender&&n.push(p.a.createElement("meta",{key:"profile:gender",property:"profile:gender",content:e.openGraph.profile.gender}))):"book"===g&&e.openGraph.book?(e.openGraph.book.authors&&e.openGraph.book.authors.length&&e.openGraph.book.authors.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"book:author:0"+a,property:"book:author",content:e}))})),e.openGraph.book.isbn&&n.push(p.a.createElement("meta",{key:"book:isbn",property:"book:isbn",content:e.openGraph.book.isbn})),e.openGraph.book.releaseDate&&n.push(p.a.createElement("meta",{key:"book:release_date",property:"book:release_date",content:e.openGraph.book.releaseDate})),e.openGraph.book.tags&&e.openGraph.book.tags.length&&e.openGraph.book.tags.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"book:tag:0"+a,property:"book:tag",content:e}))}))):"article"===g&&e.openGraph.article?(e.openGraph.article.publishedTime&&n.push(p.a.createElement("meta",{key:"article:published_time",property:"article:published_time",content:e.openGraph.article.publishedTime})),e.openGraph.article.modifiedTime&&n.push(p.a.createElement("meta",{key:"article:modified_time",property:"article:modified_time",content:e.openGraph.article.modifiedTime})),e.openGraph.article.expirationTime&&n.push(p.a.createElement("meta",{key:"article:expiration_time",property:"article:expiration_time",content:e.openGraph.article.expirationTime})),e.openGraph.article.authors&&e.openGraph.article.authors.length&&e.openGraph.article.authors.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"article:author:0"+a,property:"article:author",content:e}))})),e.openGraph.article.section&&n.push(p.a.createElement("meta",{key:"article:section",property:"article:section",content:e.openGraph.article.section})),e.openGraph.article.tags&&e.openGraph.article.tags.length&&e.openGraph.article.tags.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"article:tag:0"+a,property:"article:tag",content:e}))}))):"video.movie"!==g&&"video.episode"!==g&&"video.tv_show"!==g&&"video.other"!==g||!e.openGraph.video||(e.openGraph.video.actors&&e.openGraph.video.actors.length&&e.openGraph.video.actors.forEach((function(e,a){e.profile&&n.push(p.a.createElement("meta",{key:"video:actor:0"+a,property:"video:actor",content:e.profile})),e.role&&n.push(p.a.createElement("meta",{key:"video:actor:role:0"+a,property:"video:actor:role",content:e.role}))})),e.openGraph.video.directors&&e.openGraph.video.directors.length&&e.openGraph.video.directors.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"video:director:0"+a,property:"video:director",content:e}))})),e.openGraph.video.writers&&e.openGraph.video.writers.length&&e.openGraph.video.writers.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"video:writer:0"+a,property:"video:writer",content:e}))})),e.openGraph.video.duration&&n.push(p.a.createElement("meta",{key:"video:duration",property:"video:duration",content:e.openGraph.video.duration.toString()})),e.openGraph.video.releaseDate&&n.push(p.a.createElement("meta",{key:"video:release_date",property:"video:release_date",content:e.openGraph.video.releaseDate})),e.openGraph.video.tags&&e.openGraph.video.tags.length&&e.openGraph.video.tags.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"video:tag:0"+a,property:"video:tag",content:e}))})),e.openGraph.video.series&&n.push(p.a.createElement("meta",{key:"video:series",property:"video:series",content:e.openGraph.video.series})))}(e.openGraph.title||e.title)&&n.push(p.a.createElement("meta",{key:"og:title",property:"og:title",content:e.openGraph.title||t})),(e.openGraph.description||e.description)&&n.push(p.a.createElement("meta",{key:"og:description",property:"og:description",content:e.openGraph.description||e.description})),e.defaultOpenGraphImageWidth&&(b.defaultOpenGraphImageWidth=e.defaultOpenGraphImageWidth),e.defaultOpenGraphImageHeight&&(b.defaultOpenGraphImageHeight=e.defaultOpenGraphImageHeight),e.openGraph.images&&e.openGraph.images.length&&e.openGraph.images.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"og:image:0"+a,property:"og:image",content:e.url})),e.alt&&n.push(p.a.createElement("meta",{key:"og:image:alt0"+a,property:"og:image:alt",content:e.alt})),e.width?n.push(p.a.createElement("meta",{key:"og:image:width0"+a,property:"og:image:width",content:e.width.toString()})):b.defaultOpenGraphImageWidth&&n.push(p.a.createElement("meta",{key:"og:image:width0"+a,property:"og:image:width",content:b.defaultOpenGraphImageWidth.toString()})),e.height?n.push(p.a.createElement("meta",{key:"og:image:height"+a,property:"og:image:height",content:e.height.toString()})):b.defaultOpenGraphImageHeight&&n.push(p.a.createElement("meta",{key:"og:image:height"+a,property:"og:image:height",content:b.defaultOpenGraphImageHeight.toString()}))})),e.defaultOpenGraphVideoWidth&&(b.defaultOpenGraphVideoWidth=e.defaultOpenGraphVideoWidth),e.defaultOpenGraphVideoHeight&&(b.defaultOpenGraphVideoHeight=e.defaultOpenGraphVideoHeight),e.openGraph.videos&&e.openGraph.videos.length&&e.openGraph.videos.forEach((function(e,a){n.push(p.a.createElement("meta",{key:"og:video:0"+a,property:"og:video",content:e.url})),e.alt&&n.push(p.a.createElement("meta",{key:"og:video:alt0"+a,property:"og:video:alt",content:e.alt})),e.width?n.push(p.a.createElement("meta",{key:"og:video:width0"+a,property:"og:video:width",content:e.width.toString()})):b.defaultOpenGraphVideoWidth&&n.push(p.a.createElement("meta",{key:"og:video:width0"+a,property:"og:video:width",content:b.defaultOpenGraphVideoWidth.toString()})),e.height?n.push(p.a.createElement("meta",{key:"og:video:height"+a,property:"og:video:height",content:e.height.toString()})):b.defaultOpenGraphVideoHeight&&n.push(p.a.createElement("meta",{key:"og:video:height"+a,property:"og:video:height",content:b.defaultOpenGraphVideoHeight.toString()})),e.secureUrl&&n.push(p.a.createElement("meta",{key:"og:video:secure_url"+a,property:"og:video:secure_url",content:e.secureUrl.toString()})),e.type&&n.push(p.a.createElement("meta",{key:"og:video:type"+a,property:"og:video:type",content:e.type.toString()}))})),e.openGraph.locale&&n.push(p.a.createElement("meta",{key:"og:locale",property:"og:locale",content:e.openGraph.locale})),e.openGraph.site_name&&n.push(p.a.createElement("meta",{key:"og:site_name",property:"og:site_name",content:e.openGraph.site_name}))}return e.canonical&&n.push(p.a.createElement("link",{rel:"canonical",href:e.canonical,key:"canonical"})),e.additionalMetaTags&&e.additionalMetaTags.length>0&&e.additionalMetaTags.forEach((function(e){var a,t,o;n.push(p.a.createElement("meta",y({key:"meta:"+(null!=(a=null!=(t=null!=(o=e.keyOverride)?o:e.name)?t:e.property)?a:e.httpEquiv)},e)))})),null!=(a=e.additionalLinkTags)&&a.length&&e.additionalLinkTags.forEach((function(e){var a;n.push(p.a.createElement("link",y({key:"link"+(null!=(a=e.keyOverride)?a:e.href)+e.rel},e)))})),n},O=(s.Component,function(e){function a(){return e.apply(this,arguments)||this}return w(a,e),a.prototype.render=function(){var e=this.props,a=e.title,n=e.noindex,t=void 0!==n&&n,o=e.nofollow,s=e.robotsProps,c=e.description,r=e.canonical,m=e.openGraph,l=e.facebook,i=e.twitter,N=e.additionalMetaTags,u=e.titleTemplate,d=e.mobileAlternate,k=e.languageAlternates,h=e.additionalLinkTags;return p.a.createElement(f.a,null,v({title:a,noindex:t,nofollow:o,robotsProps:s,description:c,canonical:r,facebook:l,openGraph:m,additionalMetaTags:N,twitter:i,titleTemplate:u,mobileAlternate:d,languageAlternates:k,additionalLinkTags:h}))},a}(s.Component)),E={Test:""},G=function(e){var a=e.title,n=E[a];return n?Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(O,{openGraph:{images:[{url:"".concat("").concat(n),width:2048,height:1152,alt:"Featured image for ".concat(a)}]},twitter:{handle:"@aTwitterHandle",cardType:"summary_large_image"}}),Object(h.jsx)("img",{src:n})]}):null},j=n("+ego"),_=n("HqRm"),x=n.n(_);var T=n("sXVo"),S=n.n(T);function C(e){var a=e.summary,n=e.children;return Object(h.jsxs)("details",{className:S.a.details,children:[Object(h.jsx)("summary",{className:S.a.summary,children:a}),Object(h.jsx)("div",{className:S.a.detailsContent,children:n})]})}function I(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function P(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?I(Object(n),!0).forEach((function(a){Object(t.a)(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):I(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}var J={title:"Writing a JSON parser in Rust",tagline:"Learn the fundamentals of lexing and parsing to build a JSON parser from scratch",tags:["Lexers","Parsers","Rust"],__resourcePath:"blog/json-parser-rust.mdx",__scans:{},layout:"index"},A={frontMatter:J},L=function(e){var a=e.children,n=e.frontMatter,t=n.title,o=n.tagline;return Object(h.jsxs)(j.a,{title:t,description:o,children:[Object(h.jsx)(O,{title:t,description:o}),Object(h.jsxs)("article",{className:x.a.container,children:[Object(h.jsx)("h1",{children:t}),Object(h.jsx)("p",{children:o}),Object(h.jsx)(G,{title:t}),Object(h.jsx)("section",{children:a})]})]})};function V(e){var a=e.components,n=Object(o.a)(e,["components"]);return k(L,P(P(P({},A),n),{},{components:a,mdxType:"MDXLayout"}),k("h2",null,"Understanding the JSON syntax and types"),k("p",null,"Types include"),k("ul",null,k("li",{parentName:"ul"},"object (",k("inlineCode",{parentName:"li"},'{ "key": json_value }'),")"),k("li",{parentName:"ul"},"array (",k("inlineCode",{parentName:"li"},"[ json_value, json_value ]"),")"),k("li",{parentName:"ul"},"number (",k("inlineCode",{parentName:"li"},"2"),", ",k("inlineCode",{parentName:"li"},"-2"),", ",k("inlineCode",{parentName:"li"},"2.5"),", ",k("inlineCode",{parentName:"li"},"2E+32"),", ",k("inlineCode",{parentName:"li"},"2e-16"),")"),k("li",{parentName:"ul"},"string (",k("inlineCode",{parentName:"li"},'"a string"'),")"),k("li",{parentName:"ul"},"boolean (",k("inlineCode",{parentName:"li"},"true")," or ",k("inlineCode",{parentName:"li"},"false"),")"),k("li",{parentName:"ul"},"null")),k(C,{summary:"JSON syntax is a subset of Javascript syntax",mdxType:"Spoiler"},k("p",null,"As of ES2019, JSON syntax is a subset of Javascript syntax when ",k("a",P({parentName:"p"},{href:"https://github.com/tc39/proposal-json-superset"}),"unicode characters\nU+2028 and U+2029")," are allowed to exist in JS strings unescaped."),k("p",null,"JSON is not necessarily a ",k("strong",{parentName:"p"},"semantic")," subset of Javascript. For example, the following produces a different result when\nparsed as Javascript vs. JSON."),k("pre",P({},{className:"language-javascript"}),k("code",P({parentName:"pre"},{className:"language-javascript"}),k("span",P({parentName:"code"},{className:"token keyword"}),"const")," str ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token template-string"}),k("span",P({parentName:"span"},{className:"token template-punctuation string"}),"`"),k("span",P({parentName:"span"},{className:"token string"}),'[{ "__proto__": [] }]'),k("span",P({parentName:"span"},{className:"token template-punctuation string"}),"`")),"\n\n",k("span",P({parentName:"code"},{className:"token keyword"}),"const")," fromJS ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token function"}),"eval"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"str",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"const")," fromJSON ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token known-class-name class-name"}),"JSON"),k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token method function property-access"}),"parse"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"str",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),"\n")),k("p",null,"The ",k("inlineCode",{parentName:"p"},"fromJS")," result is an array with one item, where that item is an Object that has Array as its prototype.\nThe ",k("inlineCode",{parentName:"p"},"fromJSON")," result is also an array with one item, and that item is an Object who has an own property with\nan identifier of ",k("inlineCode",{parentName:"p"},"__proto__")," (compare the result of ",k("inlineCode",{parentName:"p"},"Object.getOwnPropertyNames(x)")," for each ",k("inlineCode",{parentName:"p"},"fromJS")," and ",k("inlineCode",{parentName:"p"},"fromJSON"),").")),k("h3",null,"Defining the types for JSON values"),k("p",null,"Start with the easy values, the primitives:"),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"enum")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Value")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// literal characters `null`"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Null"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// literal characters `true` or `false`"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),'/// characters within double quotes "..."'),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("p",null,"Add on the non-primitives:"),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"enum")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Value")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// literal characters `null`"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Null"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// literal characters `true` or `false`"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),'/// characters within double quotes "..."'),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Zero to many JSON values in an array"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Array"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token class-name"}),"Vec"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"Value"),k("span",P({parentName:"code"},{className:"token operator"}),">"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Key/value pairs"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Object"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token class-name"}),"BTreeMap"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Value"),k("span",P({parentName:"code"},{className:"token operator"}),">"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("p",null,"Quiz: Which value is missing?"),k("p",null,"Number is not quite straightforward in Rust, the available types are more granular. While the ",k("a",P({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"}),"Number in Javascript")," (and JSON!)\nrepresents a ",k("inlineCode",{parentName:"p"},"double")," value, or in other words a 64-bit floating value as described in ",k("a",P({parentName:"p"},{href:"https://en.wikipedia.org/wiki/IEEE_754"}),"IEEE 754"),"."),k("p",null,"For our purposes, we will explore how to capture JSON numbers in two ways, as an integer ",k("inlineCode",{parentName:"p"},"i64")," and as a floating value ",k("inlineCode",{parentName:"p"},"f64"),"."),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"enum")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Number")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Number without a fractional component"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Int"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"i64"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Number that has a fractional component"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Float"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"f64"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("p",null,"Finally, add this enum to our overall ",k("inlineCode",{parentName:"p"},"Value")," enum."),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"enum")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Value")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"// ..."),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Number value"),"\n  ",k("span",P({parentName:"code"},{className:"token class-name"}),"Number"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token class-name"}),"Number"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("h2",null,"Writing the Lexer"),k("h3",null,"Creating the Token type"),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token attribute attr-name"}),"#[derive(Debug, PartialEq, Clone)]"),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"enum")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"TokenKind")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Literals"),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"Int"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"i64"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"Float"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"f64"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"Null"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"Bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token keyword"}),"bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Key of the key/value pair or string value"),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Punctuation"),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"LeftBrace"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"RightBrace"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"LeftBracket"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"RightBracket"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"Comma"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"Colon"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",k("span",P({parentName:"code"},{className:"token constant"}),"EOF"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("p",null,"OPTIONAL: Implement ",k("inlineCode",{parentName:"p"},"Display")," for the Token.\nThis will allow having a custom format for printing the token out, which can be useful for debugging."),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"fn")," ",k("span",P({parentName:"code"},{className:"token function-definition function"}),"example_print"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"token",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Token"),k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"// Requires `Display` to be implemented for Token"),"\n  ",k("span",P({parentName:"code"},{className:"token macro property"}),"println!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token string"}),'"{}"'),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," token",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"// Requires `Debug` to be implemented for Token, which can be derived automatically"),"\n  ",k("span",P({parentName:"code"},{className:"token macro property"}),"println!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token string"}),'"{:?}"'),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," token",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),";"),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token comment"}),'// Note "Result as FmtResult", I typically avoid shadowing the regular `Result`'),"\n",k("span",P({parentName:"code"},{className:"token comment"}),"// enum for clarity, although it can be convenient at times."),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"use")," ",k("span",P({parentName:"code"},{className:"token namespace"}),"std",k("span",P({parentName:"span"},{className:"token punctuation"}),"::"),"fmt",k("span",P({parentName:"span"},{className:"token punctuation"}),"::")),k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),k("span",P({parentName:"code"},{className:"token class-name"}),"Display"),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Formatter"),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Result")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"as")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"FmtResult"),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Write"),k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),k("span",P({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",k("span",P({parentName:"code"},{className:"token comment"}),"// ..."),"\n\n",k("span",P({parentName:"code"},{className:"token comment"}),"//"),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"impl")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Display")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"for")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",k("span",P({parentName:"code"},{className:"token keyword"}),"fn")," ",k("span",P({parentName:"code"},{className:"token function-definition function"}),"fmt"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token operator"}),"&"),k("span",P({parentName:"code"},{className:"token keyword"}),"self"),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token operator"}),"&"),k("span",P({parentName:"code"},{className:"token keyword"}),"mut")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Formatter"),k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"->")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"FmtResult")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",k("span",P({parentName:"code"},{className:"token keyword"}),"match")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"self")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"LeftBracket")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_char"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token char string"}),"'['"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"RightBracket")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_char"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token char string"}),"']'"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"LeftBrace")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_char"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token char string"}),"'{'"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"RightBrace")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_char"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token char string"}),"'}'"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"Comma")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_char"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token char string"}),"','"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"Colon")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_char"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token char string"}),"':'"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"String"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"val",k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," ",k("span",P({parentName:"code"},{className:"token macro property"}),"write!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"f",k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token string"}),'"{:?}"'),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," val",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"Int"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"val",k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," ",k("span",P({parentName:"code"},{className:"token macro property"}),"write!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"f",k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token string"}),'"{:?}"'),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," val",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"Float"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"val",k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," ",k("span",P({parentName:"code"},{className:"token macro property"}),"write!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"f",k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token string"}),'"{:?}"'),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," val",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"Bool"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"val",k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," ",k("span",P({parentName:"code"},{className:"token macro property"}),"write!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"f",k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token string"}),'"{:?}"'),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," val",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token class-name"}),"Null")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_str"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token string"}),'"null"'),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token class-name"}),"TokenKind"),k("span",P({parentName:"code"},{className:"token punctuation"}),"::"),k("span",P({parentName:"code"},{className:"token constant"}),"EOF")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=>")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_str"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token string"}),'"EOF"'),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n        ",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",k("span",P({parentName:"code"},{className:"token comment"}),"//"),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"impl")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Display")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"for")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Token")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",k("span",P({parentName:"code"},{className:"token keyword"}),"fn")," ",k("span",P({parentName:"code"},{className:"token function-definition function"}),"fmt"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token operator"}),"&"),k("span",P({parentName:"code"},{className:"token keyword"}),"self"),k("span",P({parentName:"code"},{className:"token punctuation"}),",")," f",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token operator"}),"&"),k("span",P({parentName:"code"},{className:"token keyword"}),"mut")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Formatter"),k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"->")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"FmtResult")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n        f",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token function"}),"write_fmt"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token macro property"}),"format_args!"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"\n            ",k("span",P({parentName:"code"},{className:"token string"}),"\"token '{}' at row {}, col {}\""),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n            ",k("span",P({parentName:"code"},{className:"token keyword"}),"self"),k("span",P({parentName:"code"},{className:"token punctuation"}),"."),"kind",k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"self"),k("span",P({parentName:"code"},{className:"token punctuation"}),"."),"location",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),"row",k("span",P({parentName:"code"},{className:"token punctuation"}),",")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"self"),k("span",P({parentName:"code"},{className:"token punctuation"}),"."),"location",k("span",P({parentName:"code"},{className:"token punctuation"}),"."),"col",k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n        ",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n")),k("h3",null,"Rust Traits: The ",k("inlineCode",{parentName:"h3"},"Iterator")),k("p",null,"We'll first start be defining the ",k("inlineCode",{parentName:"p"},"struct")," for the Lexer, which will take the character input and output our ",k("inlineCode",{parentName:"p"},"Token"),"s."),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"struct")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Lexer"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Iterator"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"Item")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"char"),k("span",P({parentName:"code"},{className:"token operator"}),">>")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Iterator for chars from the input"),"\n  char_iter",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("p",null,"At first, this syntax can be confusing without much experience with Rust or other languages with generics. In this case, ",k("inlineCode",{parentName:"p"},"I")," represents\na generic type parameter which can be anything is an ",k("inlineCode",{parentName:"p"},"Iterator")," for ",k("inlineCode",{parentName:"p"},"char"),"acters."),k("p",null,"A more explicit (and semantically equivalent) way of writing this is below."),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"struct")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Lexer"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token operator"}),">"),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"where"),"\n    ",k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Iterator"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"Item")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"char"),k("span",P({parentName:"code"},{className:"token operator"}),">"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Iterator for chars from the input"),"\n  char_iter",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("p",null,"We'll want a few other fields in the lexer."),k("pre",P({},{className:"language-rust"}),k("code",P({parentName:"pre"},{className:"language-rust"}),k("span",P({parentName:"code"},{className:"token comment"}),"/// The Lexer produces tokens from the character input"),"\n",k("span",P({parentName:"code"},{className:"token keyword"}),"pub")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"struct")," ",k("span",P({parentName:"code"},{className:"token type-definition class-name"}),"Lexer"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Iterator"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token class-name"}),"Item")," ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token keyword"}),"char"),k("span",P({parentName:"code"},{className:"token operator"}),">>")," ",k("span",P({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Iterator for chars from the input"),"\n    char_iter",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"I"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// Current Location (row/col) of the lexer in the input"),"\n    location",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Location"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// The current character in the iterator"),"\n    curr",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Option"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token keyword"}),"char"),k("span",P({parentName:"code"},{className:"token operator"}),">"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n\n    ",k("span",P({parentName:"code"},{className:"token comment"}),"/// The next character in the iterator"),"\n    next",k("span",P({parentName:"code"},{className:"token punctuation"}),":")," ",k("span",P({parentName:"code"},{className:"token class-name"}),"Option"),k("span",P({parentName:"code"},{className:"token operator"}),"<"),k("span",P({parentName:"code"},{className:"token keyword"}),"char"),k("span",P({parentName:"code"},{className:"token operator"}),">"),k("span",P({parentName:"code"},{className:"token punctuation"}),","),"\n",k("span",P({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),k("h2",null,"Writing the Parser"),k("h2",null,"The nitty gritty"),k("h3",null,"Objects with duplicate keys"),k("p",null,"The RFC specifies that the names within an object SHOULD be unique,\n",k("a",P({parentName:"p"},{href:"https://datatracker.ietf.org/doc/html/rfc8259"}),"https://datatracker.ietf.org/doc/html/rfc8259")),k("blockquote",null,k("p",{parentName:"blockquote"},"An object whose names are all unique is interoperable in the sense\nthat all software implementations receiving that object will agree on\nthe name-value mappings. When the names within an object are not\nunique, the behavior of software that receives such an object is\nunpredictable. Many implementations report the last name/value pair\nonly. Other implementations report an error or fail to parse the\nobject, and some implementations report all of the name/value pairs,\nincluding duplicates.")),k("pre",P({},{className:"language-javascript"}),k("code",P({parentName:"pre"},{className:"language-javascript"}),k("span",P({parentName:"code"},{className:"token keyword"}),"const")," str ",k("span",P({parentName:"code"},{className:"token operator"}),"=")," ",k("span",P({parentName:"code"},{className:"token template-string"}),k("span",P({parentName:"span"},{className:"token template-punctuation string"}),"`"),k("span",P({parentName:"span"},{className:"token string"}),'{"a": 1, "a": 2}'),k("span",P({parentName:"span"},{className:"token template-punctuation string"}),"`")),"\n\n",k("span",P({parentName:"code"},{className:"token console class-name"}),"console"),k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token method function property-access"}),"log"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),k("span",P({parentName:"code"},{className:"token known-class-name class-name"}),"JSON"),k("span",P({parentName:"code"},{className:"token punctuation"}),"."),k("span",P({parentName:"code"},{className:"token method function property-access"}),"parse"),k("span",P({parentName:"code"},{className:"token punctuation"}),"("),"str",k("span",P({parentName:"code"},{className:"token punctuation"}),")"),k("span",P({parentName:"code"},{className:"token punctuation"}),")")," ",k("span",P({parentName:"code"},{className:"token comment"}),"// --\x3e { a: 2 }"),"\n")),k("h3",null,"Object Key Ordering"))}V.isMDXComponent=!0},"V/UV":function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/json-parser-rust",function(){return n("M6OC")}])},sXVo:function(e,a,n){e.exports={details:"Spoiler_details__dpHhE",detailsContent:"Spoiler_detailsContent__18Z1p",summary:"Spoiler_summary__2kaZH"}}},[["V/UV",0,2,1,3]]]);